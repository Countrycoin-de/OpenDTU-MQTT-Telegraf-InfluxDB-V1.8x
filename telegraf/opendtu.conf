######################################################################################
# OpenDTU-MQTT-Telegraf-InfluxDB-V1.8x
######################################################################################
# Most parts of this file are from
# https://github.com/smainz/OpenDTU-MQTT-Telegraf-influxdb-integration/tree/main/telegraf
#
# Versions:
# InfluxDB 1.8.10
# Telegraf 1.26.3
# Config   20223-06-20
######################################################################################


######################################################################################
# This telegraf configuration requires some variables to be set in the environment:
# The File-location is /etc/default/telegraf
# Example environment variable: ->  INFLUX_URL="http://localhost:8086"
#
#   - INFLUX_URL:    URL of the InfluxDB Server including port
#
#   - MQTT_URL:      The Url of the MQTT-Server, e.g. 'tcp://mqtt.server.de:1883'
#   - MQTT_USER:     The user name telegraf uses to access the MQTT-Server, e.g. 'telegraf_mqtt_user'
#   - MQTT_PASSWORD  The password used to authenticate with the MQTT-Server e.g. 'bad_password'
#
# As of in my telegraf-config are several outputs to different databases, give here the desired database.
# See also tagpass and tagexclude.
#
#   - DTU_DATABASE   The databasename where to store the values
#
# The current OpenDTU does not provide its serial, so this needs to be defined as well:
# 
#    - DTU_SERIAL:    The serial number of the DTU as configured / computed on first start
#
# and of course the base topic configured in the DTU:
# 
#    - DTU_BASE_TOPIC: Thebase topic configured in the DTU, e.g. "solar"
#
# If you do have multiple DTUs running, you have to run two telegraf processes with different
# configuration of the base topic. 
######################################################################################



######################################################################################
# OpenDTU Write to the influxdb
######################################################################################
[[outputs.influxdb]]
  # The URLs of the InfluxDB node.
  urls = ["$INFLUX_URL"]

  # Datebase to use
  database = "$DTU_DATABASE"

  # Remove the Datebase-Tag before writing to the database
  tagexclude = ["influxdb_database"]

  # Only write datasets to this datebase if they are tagged with this datebase-name
  [outputs.influxdb.tagpass]
    influxdb_database = ["$DTU_DATABASE"]


######################################################################################
# OpenDTU Write to stdout (for debugging purposes only)
######################################################################################
#[[outputs.file]]
#  files = ["stdout"]



######################################################################################
# OpenDTU dtu (string)
######################################################################################
[[inputs.mqtt_consumer]]
  # URL from MQTT-Broker
  servers = ["$MQTT_URL"]

  # Topics that will be ignored
  tagexclude = ["host","topic"]

  # Topics that will be subscribed to
  topics = [
    "$DTU_BASE_TOPIC/dtu/status",
    "$DTU_BASE_TOPIC/dtu/ip",
    "$DTU_BASE_TOPIC/dtu/hostname"
  ]

  # Data format and type
  data_format = "value"
  data_type = "string"

  # Measurement name
  name_override = "dtu"

  # Pollintervall
  # Set a long interval for this. It doesnot change often
  interval = "10m"

  # Add tags depending on topic
  [[inputs.mqtt_consumer.topic_parsing]]
    topic = "$DTU_BASE_TOPIC/dtu/+"
    tags  = "_/_/field"

  # Add general tags
  [inputs.mqtt_consumer.tags]
    # Every dataset will be tagged by this value
    dtu = "$DTU_SERIAL"

   # (Temporary)-Tag in witch datebase to write
    influxdb_database = "$DTU_DATABASE"


######################################################################################
# OpenDTU dtu (float)
######################################################################################
[[inputs.mqtt_consumer]]
  # URL from MQTT-Broker
  servers = ["$MQTT_URL"]

  # Topics that will be ignored
  tagexclude = ["host","topic"]

  ## Topics that will be subscribed to
  topics = [
    "$DTU_BASE_TOPIC/dtu/rssi",
    "$DTU_BASE_TOPIC/dtu/uptime"
  ]

  # Data format and type
  data_format = "value"
  data_type = "float"

  # Measurement name
  name_override = "dtu"

  # Pollintervall
  interval = "10s"

  # Add Tags depending on topic
  [[inputs.mqtt_consumer.topic_parsing]]
    topic = "$DTU_BASE_TOPIC/dtu/+"
    tags  = "_/_/field"

  # Add general tags
  [inputs.mqtt_consumer.tags]
    # Every dataset will be tagged by this value
    dtu = "$DTU_SERIAL"

    # (Temporary)-Tag in witch datebase to write
    influxdb_database = "$DTU_DATABASE"


######################################################################################
# OpenDTU Totals AC and DC per DTU (float)
######################################################################################
[[inputs.mqtt_consumer]]
  # URL from MQTT-Broker
  servers = ["$MQTT_URL"]

  # Topics that will be ignored
  tagexclude = ["host","topic"]

  # Topics that will be subscribed to
  topics = [
    "$DTU_BASE_TOPIC/ac/+",
    "$DTU_BASE_TOPIC/dc/+"
  ]

  # Data format and type
  data_format = "value"
  data_type = "float"

  # Measurement name
  name_override = "dtu_totals"

  # Pollintervall
  interval = "10s"

  # Add Tags depending on topic
  [[inputs.mqtt_consumer.topic_parsing]]
    topic = "$DTU_BASE_TOPIC/+/+"
    tags  = "_/channel/field"

  # Add general tags
  [inputs.mqtt_consumer.tags]
    # Every dataset will be tagged by this value
    dtu = "$DTU_SERIAL"

    # (Temporary)-Tag in witch datebase to write
    influxdb_database = "$DTU_DATABASE"


######################################################################################
# OpenDTU Inverter specific topics (string)
######################################################################################
[[inputs.mqtt_consumer]]
  # URL from MQTT-Broker
  servers = ["$MQTT_URL"]

  # Topics that will be ignored
  tagexclude = ["host","topic"]

  # Topics that will be subscribed to
  topics = [
    "$DTU_BASE_TOPIC/+/device/+",
    "$DTU_BASE_TOPIC/+/name"
  ]

  # Data format and type
  data_format = "value"
  data_type = "string"

  # Measurement name
  name_override = "inverter"

  # Pollintervall
  # Set a long interval for this. It doesnot change often
  interval = "10m"

  # Add Tags depending on topic
  [[inputs.mqtt_consumer.topic_parsing]]
    topic = "$DTU_BASE_TOPIC/+/+/+"
    tags  = "_/inverter/_/field"

  # Add Tags depending on topic
  [[inputs.mqtt_consumer.topic_parsing]]
    topic = "$DTU_BASE_TOPIC/+/name"
    tags  = "_/inverter/field"  

  # Add general tags
  [inputs.mqtt_consumer.tags]
    # Every dataset will be tagged by this value
    dtu = "$DTU_SERIAL"

    # (Temporary)-Tag in witch datebase to write
    influxdb_database = "$DTU_DATABASE"


######################################################################################
# OpenDTU Inverter specific topics (float)
######################################################################################
[[inputs.mqtt_consumer]]
  # URL from MQTT-Broker
  servers = ["$MQTT_URL"]

  # Topics that will be ignored
  tagexclude = ["host","topic"]

  # Topics that will be subscribed to
  topics = [
    "$DTU_BASE_TOPIC/+/status/+",
    "$DTU_BASE_TOPIC/+/0/temperature"
  ]

  # Data format and type
  data_format = "value"
  data_type = "float"

  # Measurement name
  name_override = "inverter"

  # Pollintervall
  interval = "10s"

  # Add Tags depending on topic
  [[inputs.mqtt_consumer.topic_parsing]]
    topic =  "$DTU_BASE_TOPIC/+/status/+"
    tags  = "_/inverter/_/field"

  # Add Tags depending on topic
  [[inputs.mqtt_consumer.topic_parsing]]
    topic =  "$DTU_BASE_TOPIC/+/0/+"
    tags  = "_/inverter/_/field"

  # Add general tags
  [inputs.mqtt_consumer.tags]
    # Every dataset will be tagged by this value
    dtu = "$DTU_SERIAL"

    # (Temporary)-Tag in witch datebase to write
    influxdb_database = "$DTU_DATABASE"


######################################################################################
# OpenDTU Inverter totals (float)
######################################################################################
[[inputs.mqtt_consumer]]
  # URL from MQTT-Broker
  servers = ["$MQTT_URL"]

  # Topics that will be ignored
  tagexclude = ["host","topic"]

 # Topics that will be subscribed to
  topics = [
    "$DTU_BASE_TOPIC/+/0/powerdc",
    "$DTU_BASE_TOPIC/+/0/current",
    "$DTU_BASE_TOPIC/+/0/frequency",
    "$DTU_BASE_TOPIC/+/0/yieldday",
    "$DTU_BASE_TOPIC/+/0/yieldtotal"
  ]

  # Data format and type
  data_format = "value"
  data_type = "float"

  # Measurement name
  name_override = "inverter_totals"

  # Pollintervall
  interval = "10s"

  # Add Tags depending on topic
  [[inputs.mqtt_consumer.topic_parsing]]
    topic =  "$DTU_BASE_TOPIC/+/0/+"
    tags  = "_/inverter/_/field"

  # Add general tags
  [inputs.mqtt_consumer.tags]
    # Every dataset will be tagged by this value
    dtu = "$DTU_SERIAL"

    # (Temporary)-Tag in witch datebase to write
    influxdb_database = "$DTU_DATABASE"


######################################################################################
# OpenDTU Inverter details (string)
######################################################################################    
[[inputs.mqtt_consumer]]
  # URL from MQTT-Broker
  servers = ["$MQTT_URL"]

  # Topics that will be ignored
  tagexclude = ["host","topic"]

 # Topics that will be subscribed to
  topics = [
    "$DTU_BASE_TOPIC/+/+/name"
  ]

  # Data format and type
  data_format = "value"
  data_type = "string"

  # Measurement name
  name_override = "inverter_details"

  # Pollintervall
  interval = "10m"

  # Add Tags depending on topic
  [[inputs.mqtt_consumer.topic_parsing]]
    topic =  "$DTU_BASE_TOPIC/+/0/+"
    tags  = "_/inverter/phase/field"

  [[inputs.mqtt_consumer.topic_parsing]]
    topic =  "$DTU_BASE_TOPIC/+/1/+"
    tags  = "_/inverter/string/field"

  [[inputs.mqtt_consumer.topic_parsing]]
    topic =  "$DTU_BASE_TOPIC/+/2/+"
    tags  = "_/inverter/string/field"

  [[inputs.mqtt_consumer.topic_parsing]]
    topic =  "$DTU_BASE_TOPIC/+/3/+"
    tags  = "_/inverter/string/field"
  
  [[inputs.mqtt_consumer.topic_parsing]]
    topic =  "$DTU_BASE_TOPIC/+/4/+"
    tags  = "_/inverter/string/field"

  # Add general tags
  [inputs.mqtt_consumer.tags]
    # Every dataset will be tagged by this value
    dtu = "$DTU_SERIAL"

    # (Temporary)-Tag in witch datebase to write
    influxdb_database = "$DTU_DATABASE"


######################################################################################
# OpenDTU Inverter details (float)
######################################################################################    
[[inputs.mqtt_consumer]]
  # URL from MQTT-Broker
  servers = ["$MQTT_URL"]

  # Topics that will be ignored
  tagexclude = ["host","topic"]

 # Topics that will be subscribed to
  topics = [
    "$DTU_BASE_TOPIC/+/+/current",
    "$DTU_BASE_TOPIC/+/+/power",
    "$DTU_BASE_TOPIC/+/0/powerfactor",
    "$DTU_BASE_TOPIC/+/0/reactivepower",
    "$DTU_BASE_TOPIC/+/+/voltage",
    "$DTU_BASE_TOPIC/+/+/yieldday",
    "$DTU_BASE_TOPIC/+/+/yieldtotal",
    "$DTU_BASE_TOPIC/+/+/irradiation"
  ]

  # Data format and type
  data_format = "value"
  data_type = "float"

  # Measurement name
  name_override = "inverter_details"

  # Pollintervall
  interval = "10s"

  # Add Tags depending on topic
  [[inputs.mqtt_consumer.topic_parsing]]
    topic =  "$DTU_BASE_TOPIC/+/0/+"
    tags  = "_/inverter/phase/field"

  [[inputs.mqtt_consumer.topic_parsing]]
    topic =  "$DTU_BASE_TOPIC/+/1/+"
    tags  = "_/inverter/string/field"

  [[inputs.mqtt_consumer.topic_parsing]]
    topic =  "$DTU_BASE_TOPIC/+/2/+"
    tags  = "_/inverter/string/field"

  [[inputs.mqtt_consumer.topic_parsing]]
    topic =  "$DTU_BASE_TOPIC/+/3/+"
    tags  = "_/inverter/string/field"
  
  [[inputs.mqtt_consumer.topic_parsing]]
    topic =  "$DTU_BASE_TOPIC/+/4/+"
    tags  = "_/inverter/string/field"            

  # Add general tags
  [inputs.mqtt_consumer.tags]
    # Every dataset will be tagged by this value
    dtu = "$DTU_SERIAL"

    # (Temporary)-Tag in witch datebase to write
    influxdb_database = "$DTU_DATABASE"






######################################################################################
# Processors
###################################################################################### 
[[processors.pivot]]
  tag_key = "field"
  value_key = "value"


